/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/topics": {
    get: operations["getAllTopicsByCourseId"];
    put: operations["updateTopic"];
    post: operations["createTopic"];
  };
  "/exercises/{exerciseId}/run": {
    put: operations["runCode"];
  };
  "/exercises/code": {
    put: operations["updateCodeExercise"];
    post: operations["createCodeExercise"];
  };
  "/courses": {
    get: operations["getAll"];
    put: operations["updateById"];
    post: operations["createOne_1"];
  };
  "/courses/students": {
    put: operations["updateStudentsInCourse"];
  };
  "/users": {
    get: operations["getUsersByRoleOrAll"];
    post: operations["createUser"];
    patch: operations["updateById_1"];
  };
  "/users/import-users": {
    post: operations["importUsersByExcel"];
  };
  "/topics/view": {
    get: operations["getPublicGroups"];
    post: operations["addViewPermission"];
    delete: operations["removeViewPermission"];
  };
  "/materials": {
    post: operations["createOne"];
    patch: operations["updateByMaterialAndTopicId"];
  };
  "/materials/view": {
    get: operations["getPublicMaterials"];
    post: operations["addViewPermission_1"];
    delete: operations["removeViewPermission_1"];
  };
  "/groups": {
    post: operations["createGroup"];
  };
  "/groups/student": {
    post: operations["addStudentsToGroup"];
  };
  "/exercises/{exerciseId}/submit": {
    post: operations["submitCodeExercise"];
  };
  "/exercises/{exerciseId}/check-key": {
    post: operations["checkCodeExerciseKey"];
  };
  "/exercises/quiz": {
    post: operations["createQuizExercise"];
    patch: operations["updateQuizExercise"];
  };
  "/exercises/quiz/submit": {
    post: operations["submitQuizExercise"];
  };
  "/exercises/essay": {
    post: operations["createEssayExercise"];
  };
  "/exercises/essay/submit": {
    post: operations["submitEssayExercise"];
  };
  "/courses/student": {
    post: operations["addStudentToCourse"];
    delete: operations["deleteById_3"];
  };
  "/courses/import-students": {
    post: operations["addStudentsToCourse"];
  };
  "/courses/import-courses": {
    post: operations["importCoursesByExcel"];
  };
  "/courses/enrollment": {
    post: operations["enrollUserToCourse"];
  };
  "/auth/logout": {
    post: operations["Logout"];
  };
  "/auth/login/user": {
    post: operations["signInUser"];
  };
  "/auth/login/admin": {
    post: operations["signInAdmin"];
  };
  "/exercises/essay/grade": {
    patch: operations["gradeEssaySubmission"];
  };
  "/users/{userId}": {
    get: operations["getById"];
    delete: operations["deleteById"];
  };
  "/users/get-by-user-name/{username}": {
    get: operations["getUserByUserName"];
  };
  "/topics/{topicId}": {
    get: operations["getTopic"];
    delete: operations["deleteTopic"];
  };
  "/topics/user/{userId}": {
    get: operations["getTopicByUserId"];
  };
  "/materials/{topicId}": {
    get: operations["getMaterialsByTopicId"];
  };
  "/materials/{materialId}": {
    get: operations["getById_1"];
    delete: operations["deleteById_1"];
  };
  "/groups/{groupId}": {
    get: operations["getGroupById"];
    delete: operations["deleteGroup"];
  };
  "/groups/{groupId}/student/not-in-group": {
    get: operations["getStudentNotInGroup"];
  };
  "/groups/{groupId}/student/in-group": {
    get: operations["getStudentInGroup"];
  };
  "/groups/course/{courseId}": {
    get: operations["getGroupsByCourseId"];
  };
  "/exercises": {
    get: operations["getAllExerciseByCourseId"];
    delete: operations["deleteExerciseById"];
  };
  "/exercises/exercise": {
    get: operations["getExerciseById"];
  };
  "/courses/{courseId}": {
    get: operations["getById_2"];
    delete: operations["deleteById_2"];
  };
  "/auth/check-session/user": {
    get: operations["checkSessionUser"];
  };
  "/auth/check-session/admin": {
    get: operations["checkSessionAdmin"];
  };
  "/groups/{groupId}/student": {
    delete: operations["deleteStudentInGroup"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    UpdateTopicRequest: {
      topicId: string;
      topicName?: string;
      description?: string;
    };
    IOTestCase: {
      value: string;
      dataType: string;
    };
    RunCodeRequest: {
      containerId?: string;
      contentFile?: string;
      fileName?: string;
      inputs?: components["schemas"]["IOTestCase"][];
    };
    CodeExercise: {
      exerciseId?: string;
      topicId: string;
      exerciseName: string;
      key: string;
      createdDate?: string;
      updatedDate?: string;
      /** Format: date-time */
      startTime: string;
      /** Format: date-time */
      endTime: string;
      type: string;
      publicGroupIds: string[];
      language: string;
      functionName: string;
      template: string;
      description: string;
      testcases: string[];
    };
    UpdateCourseRequest: {
      courseId: string;
      courseName?: string;
      semester?: string;
      enrollKey?: string;
      description?: string;
      teacherId?: string;
    };
    UpdateStudentsToCourseRequest: {
      courseId: string;
      studentIds?: string[];
    };
    CreateUserRequest: {
      name: string;
      email: string;
      username: string;
      role: string;
    };
    CreateTopicRequest: {
      courseId: string;
      topicName: string;
      description?: string;
    };
    CreateMaterialRequest: {
      materialType: string;
      topicId: string;
      url?: string;
      description?: string;
    };
    CreateGroupRequest: {
      courseId: string;
      groupName: string;
    };
    CreateGroupStudentRequest: {
      studentIds: string[];
      description?: string;
      groupId: string;
    };
    SubmitCodeRequest: {
      containerId?: string;
    };
    QuizChoice: {
      choiceId?: string;
      content: string;
    };
    QuizExercise: {
      exerciseId?: string;
      topicId: string;
      exerciseName: string;
      key: string;
      createdDate?: string;
      updatedDate?: string;
      /** Format: date-time */
      startTime: string;
      /** Format: date-time */
      endTime: string;
      type: string;
      publicGroupIds: string[];
      questions: components["schemas"]["QuizQuestion"][];
    };
    QuizQuestion: {
      questionId?: string;
      title: string;
      description: string;
      choices: components["schemas"]["QuizChoice"][];
      answers: components["schemas"]["QuizChoice"][];
    };
    QuizAnswers: {
      quizAnswerId?: string;
      questionId: string;
      answers: components["schemas"]["QuizChoice"][];
    };
    QuizSubmission: {
      submissionId?: string;
      studentId: string;
      exerciseId: string;
      /** Format: float */
      score?: number;
      dateSubmit?: string;
      dateGrade?: string;
      reviewable: boolean;
      submission: components["schemas"]["QuizAnswers"][];
    };
    CreateEssayExerciseRequest: {
      topicId: string;
      exerciseName: string;
      key: string;
      /** Format: date-time */
      startTime: string;
      /** Format: date-time */
      endTime: string;
      publicGroupIds: string[];
      question: string;
    };
    EssaySubmission: {
      submissionId?: string;
      studentId: string;
      exerciseId: string;
      /** Format: float */
      score?: number;
      dateSubmit?: string;
      dateGrade?: string;
      reviewable: boolean;
      submission: string;
    };
    CreateCodeExerciseRequest: {
      topicId: string;
      exerciseName: string;
      key: string;
      /** Format: date-time */
      startTime: string;
      /** Format: date-time */
      endTime: string;
      type: string;
      publicGroupIds: string[];
      language: string;
      functionName: string;
      template: string;
      description: string;
      testcases: components["schemas"]["TestCase"][];
    };
    TestCase: {
      testcaseId?: string;
      inputs: components["schemas"]["IOTestCase"][];
      output: components["schemas"]["IOTestCase"];
    };
    CreateCourseRequest: {
      courseName: string;
      semester?: string;
      description?: string;
      teacherId: string;
    };
    AddStudentToCourseRequest: {
      studentIds?: string[];
      courseId: string;
    };
    ImportStudentToCourseRequest: {
      courseId: string;
      /** Format: binary */
      file: string;
    };
    CourseEnrollmentRequest: {
      courseId: string;
      studentId: string;
      enrollmentKey: string;
    };
    LoginRequest: {
      userName?: string;
      password?: string;
    };
    UpdateUserRequest: {
      userId: string;
      updatedName?: string;
      updatedEmail?: string;
      updatedUsername?: string;
      updatedPassword?: string;
      updatedRole?: string;
      /** Format: date-time */
      createdDate?: string;
    };
    UpdateMaterialRequest: {
      materialId: string;
      materialType?: string;
      topicId?: string;
      url?: string;
      description?: string;
    };
    UpdateQuizExerciseRequest: {
      topicId?: string;
      exerciseName?: string;
      key?: string;
      /** Format: date-time */
      startTime?: string;
      /** Format: date-time */
      endTime?: string;
      publicGroupIds?: string[];
      questions?: components["schemas"]["QuizQuestion"][];
    };
    DeleteExerciseRequest: {
      exerciseId: string;
      type: string;
    };
    RemoveStudentFromCourseRequest: {
      studentId: string;
      courseId: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  getAllTopicsByCourseId: {
    parameters: {
      query: {
        courseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateTopic: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateTopicRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  createTopic: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateTopicRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  runCode: {
    parameters: {
      path: {
        exerciseId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["RunCodeRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateCodeExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CodeExercise"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  createCodeExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateCodeExerciseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getAll: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateById: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateCourseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  createOne_1: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateCourseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateStudentsInCourse: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateStudentsToCourseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getUsersByRoleOrAll: {
    parameters: {
      query?: {
        role?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  createUser: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateUserRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateById_1: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateUserRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  importUsersByExcel: {
    requestBody?: {
      content: {
        "application/json": {
          /** Format: binary */
          file: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getPublicGroups: {
    parameters: {
      query: {
        topicId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  addViewPermission: {
    parameters: {
      query: {
        topicId: string;
        groupIds: string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  removeViewPermission: {
    parameters: {
      query: {
        topicId: string;
        groupIds: string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  createOne: {
    parameters: {
      query: {
        file: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateMaterialRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateByMaterialAndTopicId: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateMaterialRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getPublicMaterials: {
    parameters: {
      query: {
        materialId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  addViewPermission_1: {
    parameters: {
      query: {
        materialId: string;
        groupIds: string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  removeViewPermission_1: {
    parameters: {
      query: {
        materialId: string;
        groupIds: string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  createGroup: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateGroupRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  addStudentsToGroup: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateGroupStudentRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  submitCodeExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SubmitCodeRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  checkCodeExerciseKey: {
    parameters: {
      path: {
        exerciseId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  createQuizExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["QuizExercise"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateQuizExercise: {
    parameters: {
      query: {
        exerciseId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateQuizExerciseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  submitQuizExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["QuizSubmission"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  createEssayExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateEssayExerciseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  submitEssayExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["EssaySubmission"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  addStudentToCourse: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AddStudentToCourseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteById_3: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["RemoveStudentFromCourseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  addStudentsToCourse: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["ImportStudentToCourseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  importCoursesByExcel: {
    requestBody?: {
      content: {
        "application/json": {
          /** Format: binary */
          file: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  enrollUserToCourse: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CourseEnrollmentRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  Logout: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  signInUser: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LoginRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  signInAdmin: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LoginRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  gradeEssaySubmission: {
    parameters: {
      query: {
        essaySubmissionId: string;
        score: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getById: {
    parameters: {
      path: {
        userId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteById: {
    parameters: {
      path: {
        userId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getUserByUserName: {
    parameters: {
      query: {
        role: string;
      };
      path: {
        username: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getTopic: {
    parameters: {
      path: {
        topicId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteTopic: {
    parameters: {
      path: {
        topicId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getTopicByUserId: {
    parameters: {
      query: {
        courseId: string;
      };
      path: {
        userId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getMaterialsByTopicId: {
    parameters: {
      path: {
        topicId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getById_1: {
    parameters: {
      path: {
        materialId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteById_1: {
    parameters: {
      path: {
        materialId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getGroupById: {
    parameters: {
      path: {
        groupId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteGroup: {
    parameters: {
      path: {
        groupId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getStudentNotInGroup: {
    parameters: {
      path: {
        groupId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getStudentInGroup: {
    parameters: {
      path: {
        groupId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getGroupsByCourseId: {
    parameters: {
      path: {
        courseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getAllExerciseByCourseId: {
    parameters: {
      query: {
        courseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteExerciseById: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["DeleteExerciseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getExerciseById: {
    parameters: {
      query: {
        exerciseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getById_2: {
    parameters: {
      path: {
        courseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteById_2: {
    parameters: {
      path: {
        courseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  checkSessionUser: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  checkSessionAdmin: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteStudentInGroup: {
    parameters: {
      path: {
        groupId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
}
